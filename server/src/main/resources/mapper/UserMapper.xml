<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cumtcdio.server.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.cumtcdio.server.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <resultMap id="UserRoleMapper" type="cn.cumtcdio.server.model.User" extends="BaseResultMap">
    <collection property="roleList" column="id"
                select="cn.cumtcdio.server.mapper.RoleMapper.getRoleByUserId" fetchType="eager">
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, `password`, real_name, group_id, phone, `state`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.cumtcdio.server.model.User">
    insert into user (id, username, `password`, 
      real_name, group_id, phone, 
      `state`)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.cumtcdio.server.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cumtcdio.server.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cumtcdio.server.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getMembersByGroupId" parameterType="INTEGER" resultType="STRING">
    select real_name
    from user
    where group_id=#{groupId}
  </select>
  <select id="selectByUserName" resultMap="UserRoleMapper">
    SELECT *
    FROM user
    WHERE username = #{username}
  </select>
  <select id="getUserInfoByUsername" resultMap="BaseResultMap">
    SELECT id,username,real_name
    FROM user
    WHERE username = #{username}
  </select>
  <select id="selectAll">
    select *
    from user
  </select>
  <select id="getStudentInfo" resultMap="BaseResultMap">
    select *
    from user
    where is_teacher = 0
  </select>
  <select id="getTeacherInfo" resultMap="BaseResultMap">
    select *
    from user
    where is_teacher = 1
  </select>
</mapper>